
==================== FINAL INTERFACE ====================
2019-06-05 16:13:10.295022148 UTC

interface main:Main [family instance module] 8065
  interface hash: fffa7d02bd3cd830ec5da0164aed922d
  ABI hash: 0fb9d695daeb47c072b315f078833bf8
  export-list hash: 23071eabf6a6e1aad7b9f1ba284df652
  orphan hash: eccf0eeffa9cf071e82bba971778d5bf
  flag hash: a4bafd314e02c275e29ac801e744231c
  opt_hash: 6faf2de08de32d19db9870899d88e59a
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  plugin_hash: ad164012d6b1e14942349d58b1132007
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.allUsers
  Main.bob
  Main.jenny
  Main.main
  Main.matchesId
  Main.User{Main.User userId userName}
module dependencies:
package dependencies: aeson-1.4.2.0 appar-0.1.8 array-0.5.3.0
                      async-2.2.1 attoparsec-0.13.2.2 auto-update-0.1.4.1 base-4.12.0.0
                      base-compat-0.10.5 binary-0.8.6.0 blaze-builder-0.4.1.0
                      bsb-http-chunked-0.0.0.4 byteorder-1.0.4 bytestring-0.10.8.2
                      case-insensitive-1.2.0.11 containers-0.6.0.1
                      data-default-class-0.1.2.0 deepseq-1.4.4.0 directory-1.3.3.0
                      dlist-0.8.0.6 exceptions-0.10.2 filepath-1.4.2.1 ghc-boot-th-8.6.5
                      ghc-prim-0.5.3 hashable-1.2.7.0 http-date-0.0.8 http-types-0.12.3
                      http2-1.6.5 integer-gmp-1.0.2.0 integer-logarithms-1.0.3
                      iproute-1.7.7 monad-control-1.0.2.3 mtl-2.2.2 network-2.8.0.1
                      network-byte-order-0.0.0.0 primitive-0.6.4.0 psqueues-0.2.7.1
                      random-1.1 regex-base-0.93.2 regex-compat-0.95.1 regex-posix-0.95.2
                      resourcet-1.2.2 scientific-0.3.6.2 scotty-0.11.4
                      simple-sendfile-0.2.28 stm-2.5.0.0 streaming-commons-0.2.1.0
                      tagged-0.8.6 template-haskell-2.14.0.0 text-1.2.3.1 time-1.8.0.2
                      time-locale-compat-0.1.1.5 transformers-0.5.6.2
                      transformers-base-0.4.5.2 unix-2.7.2.2 unix-compat-0.5.1
                      unliftio-core-0.1.2.0 unordered-containers-0.2.9.0 uuid-types-1.0.3
                      vault-0.3.1.2 vector-0.12.0.3 wai-3.2.2 wai-extra-3.0.26
                      warp-3.2.27 word8-0.1.3
orphans: regex-posix-0.95.2:Text.Regex.Posix.String
         regex-posix-0.95.2:Text.Regex.Posix.Sequence
         regex-posix-0.95.2:Text.Regex.Posix.ByteString.Lazy
         regex-posix-0.95.2:Text.Regex.Posix.ByteString
         regex-base-0.93.2:Text.Regex.Base.Context
         attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         vector-0.12.0.3:Data.Vector.Unboxed
         vector-0.12.0.3:Data.Vector.Fusion.Bundle
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         network-2.8.0.1:Network.Socket stm-2.5.0.0:Control.Monad.STM
         transformers-0.5.6.2:Control.Monad.Trans.Error
         hashable-1.2.7.0:Data.Hashable.Generic text-1.2.3.1:Data.Text.Lazy
         text-1.2.3.1:Data.Text binary-0.8.6.0:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.1:Data.Text.Show base-4.12.0.0:GHC.Float
         base-4.12.0.0:GHC.Base
family instance modules: aeson-1.4.2.0:Data.Aeson.Types.Internal
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.12.0.0:Control.Applicative base-4.12.0.0:Data.Complex
                         base-4.12.0.0:Data.Functor.Compose base-4.12.0.0:Data.Functor.Const
                         base-4.12.0.0:Data.Functor.Identity
                         base-4.12.0.0:Data.Functor.Product base-4.12.0.0:Data.Functor.Sum
                         base-4.12.0.0:Data.Monoid base-4.12.0.0:Data.Semigroup
                         base-4.12.0.0:Data.Semigroup.Internal base-4.12.0.0:Data.Version
                         base-4.12.0.0:Data.Void base-4.12.0.0:GHC.Exts
                         base-4.12.0.0:GHC.Generics base-4.12.0.0:GHC.IO.Exception
                         containers-0.6.0.1:Data.IntMap.Internal
                         containers-0.6.0.1:Data.IntSet.Internal
                         containers-0.6.0.1:Data.Map.Internal
                         containers-0.6.0.1:Data.Sequence.Internal
                         containers-0.6.0.1:Data.Set.Internal containers-0.6.0.1:Data.Tree
                         dlist-0.8.0.6:Data.DList ghc-boot-th-8.6.5:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.6.5:GHC.LanguageExtensions.Type
                         iproute-1.7.7:Data.IP.Addr iproute-1.7.7:Data.IP.Range
                         monad-control-1.0.2.3:Control.Monad.Trans.Control
                         primitive-0.6.4.0:Control.Monad.Primitive
                         primitive-0.6.4.0:Data.Primitive.Array
                         primitive-0.6.4.0:Data.Primitive.ByteArray
                         primitive-0.6.4.0:Data.Primitive.PrimArray
                         primitive-0.6.4.0:Data.Primitive.SmallArray
                         primitive-0.6.4.0:Data.Primitive.UnliftedArray
                         resourcet-1.2.2:Control.Monad.Trans.Resource.Internal
                         scotty-0.11.4:Web.Scotty.Internal.Types tagged-0.8.6:Data.Tagged
                         template-haskell-2.14.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.1:Data.Text text-1.2.3.1:Data.Text.Lazy
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.3:Data.Vector vector-0.12.0.3:Data.Vector.Primitive
                         vector-0.12.0.3:Data.Vector.Storable
                         vector-0.12.0.3:Data.Vector.Unboxed
                         vector-0.12.0.3:Data.Vector.Unboxed.Base
import  -/  aeson-1.4.2.0:Data.Aeson 533cb8dcdb776be6ecfee60bfe65a4ec
import  -/  aeson-1.4.2.0:Data.Aeson.Types.FromJSON 089dbfa026af69d803a375c80cb2a06f
import  -/  aeson-1.4.2.0:Data.Aeson.Types.ToJSON 8811808a9cf9604e9d03968396d8f9cf
import  -/  base-4.12.0.0:Data.Monoid 12b87658decc811c5251626260c01aeb
import  -/  base-4.12.0.0:GHC.Base c00b75f0b052d05c55ba6a4dd1c63b26
import  -/  base-4.12.0.0:GHC.Generics 2b3b2e72be66983021f8ad0c2edcf290
import  -/  base-4.12.0.0:GHC.List 4014a3c8a3b7c31c8325f6bcf1feea4a
import  -/  base-4.12.0.0:GHC.Show 838a5d039379d82d9626aae53dfce276
import  -/  base-4.12.0.0:Prelude 3c779dfd6448bdd8e234c336802c2acb
import  -/  base-4.12.0.0:System.IO dd4f3cfe73b94b7cae46a4ca98a3f09f
import  -/  ghc-prim-0.5.3:GHC.Classes 0f6fd7d7db53fc48f6e1f01803cc6c9d
import  -/  scotty-0.11.4:Web.Scotty 8ef07ee4a8673ce1b89c0d9412d61fa9
1742e72607cb765e2577200d44322d15
  $fFromJSONUser :: Data.Aeson.Types.FromJSON.FromJSON Main.User
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Main.User
                  Main.$fFromJSONUser_$cparseJSON
                  Main.$fFromJSONUser_$cparseJSONList -}
e08c349b57899f83a4ac386d0fb8547c
  $fFromJSONUser1 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (", encountered "#) -}
341f61678e660cb34a41a59be26b542e
  $fFromJSONUser10 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("userId"#) -}
7db2dd05c2ea74aa33605c50016033a7
  $fFromJSONUser2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("[a]"#) -}
b404a5c8a0b04dae60dbc02d85d31c20
  $fFromJSONUser3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("expected "#) -}
716395b10775bbf26c2692ae2502821d
  $fFromJSONUser4 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Object
    -> Data.Aeson.Types.Internal.Parser
         ((GHC.Generics.:*:)
            (GHC.Generics.M1
               GHC.Generics.S
               ('GHC.Generics.MetaSel
                  ('GHC.Maybe.Just "userId")
                  'GHC.Generics.NoSourceUnpackedness
                  'GHC.Generics.NoSourceStrictness
                  'GHC.Generics.DecidedLazy)
               (GHC.Generics.Rec0 GHC.Types.Int))
            (GHC.Generics.M1
               GHC.Generics.S
               ('GHC.Generics.MetaSel
                  ('GHC.Maybe.Just "userName")
                  'GHC.Generics.NoSourceUnpackedness
                  'GHC.Generics.NoSourceStrictness
                  'GHC.Generics.DecidedLazy)
               (GHC.Generics.Rec0 GHC.Base.String))
            a1)
  {- Arity: 3, Strictness: <L,U(U,U,U,U,U,U,U)><L,U><L,U>,
     Unfolding: (\ @ a1
                   (opts :: Data.Aeson.Types.Internal.Options)
                   (fargs :: Data.Aeson.Types.FromJSON.FromArgs
                               Data.Aeson.Types.Generic.Zero a1)
                   (obj :: Data.Aeson.Types.Internal.Object) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          (GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                ('GHC.Maybe.Just "userId")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 GHC.Types.Int)
                             a1)
                   = Data.Aeson.Types.FromJSON.$fFromRecordarityM11_$cparseRecord
                       @ ('GHC.Generics.MetaSel
                            ('GHC.Maybe.Just "userId")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                       @ Data.Aeson.Types.Generic.Zero
                       @ (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                       Main.$fFromJSONUser_$s$fSelectorMetaMetaSel1
                       Main.$fFromJSONUser8
                         `cast`
                       (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                                 <Data.Aeson.Types.Generic.Zero>_N
                                 <GHC.Generics.K1 GHC.Generics.R GHC.Types.Int>_N))
                       @ a1
                       opts
                       fargs
                       obj
                 } in
                 let {
                   e :: Data.Aeson.Types.Internal.Parser
                          (GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                ('GHC.Maybe.Just "userName")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 GHC.Base.String)
                             a1)
                   = Data.Aeson.Types.FromJSON.$fFromRecordarityM11_$cparseRecord
                       @ ('GHC.Generics.MetaSel
                            ('GHC.Maybe.Just "userName")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                       @ Data.Aeson.Types.Generic.Zero
                       @ (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                       Main.$fFromJSONUser_$s$fSelectorMetaMetaSel
                       Main.$fFromJSONUser5
                         `cast`
                       (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                                 <Data.Aeson.Types.Generic.Zero>_N
                                 <GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char]>_N))
                       @ a1
                       opts
                       fargs
                       obj
                 } in
                 (\ @ f4 :: * -> *
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f4 r)
                    (ks :: Data.Aeson.Types.Internal.Success
                             ((GHC.Generics.:*:)
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Maybe.Just "userId")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Types.Int))
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Maybe.Just "userName")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Base.String))
                                a1)
                             f4
                             r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       <GHC.Generics.M1
                          GHC.Generics.S
                          ('GHC.Generics.MetaSel
                             ('GHC.Maybe.Just "userId")
                             'GHC.Generics.NoSourceUnpackedness
                             'GHC.Generics.NoSourceStrictness
                             'GHC.Generics.DecidedLazy)
                          (GHC.Generics.Rec0 GHC.Types.Int)
                          a1>_R)
                    @ f4
                    @ r
                    path
                    kf
                    (\ (a2 :: GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Maybe.Just "userId")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Types.Int)
                                a1) ->
                     e `cast`
                     (Data.Aeson.Types.Internal.N:Parser[0]
                          <GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                ('GHC.Maybe.Just "userName")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 GHC.Base.String)
                             a1>_R)
                       @ f4
                       @ r
                       path
                       kf
                       (\ (a3 :: GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Maybe.Just "userName")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Base.String)
                                   a1) ->
                        ks
                          (GHC.Generics.:*:
                             @ *
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Maybe.Just "userId")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.Rec0 GHC.Types.Int))
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Maybe.Just "userName")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.Rec0 GHC.Base.String))
                             @ a1
                             a2
                             a3))))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <(GHC.Generics.:*:)
                              (GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Maybe.Just "userId")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.Rec0 GHC.Types.Int))
                              (GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Maybe.Just "userName")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.Rec0 GHC.Base.String))
                              a1>_R))) -}
6959bcba148c1a8cf79650c5c9b05b9a
  $fFromJSONUser5 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1)
  {- Arity: 3, Strictness: <L,A><L,A><L,U>,
     Unfolding: InlineRule (3, True, True)
                (\ @ a1
                   (w1 :: Data.Aeson.Types.Internal.Options)
                   (w2 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a1)
                   (w3 :: Data.Aeson.Types.Internal.Value) ->
                 Data.Aeson.Types.FromJSON.$w$cgParseJSON2
                   @ [GHC.Types.Char]
                   @ Data.Aeson.Types.Generic.Zero
                   @ GHC.Generics.R
                   Main.$fFromJSONUser_$s$fFromJSON[]
                   @ a1
                   w3) -}
bfd6c96c389f6fa8e803f6f4db3c8dda
  $fFromJSONUser6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$fFromJSONUser7) -}
bf026fac54a77847f3d8a3680f8b9b34
  $fFromJSONUser7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("userName"#) -}
c9f49463f0ae530753d99928be719abd
  $fFromJSONUser8 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int a1)
  {- Arity: 3, Strictness: <L,A><L,A><L,U>,
     Unfolding: InlineRule (3, True, True)
                (\ @ a1
                   (w1 :: Data.Aeson.Types.Internal.Options)
                   (w2 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a1)
                   (w3 :: Data.Aeson.Types.Internal.Value) ->
                 Data.Aeson.Types.FromJSON.$w$cgParseJSON2
                   @ GHC.Types.Int
                   @ Data.Aeson.Types.Generic.Zero
                   @ GHC.Generics.R
                   Data.Aeson.Types.FromJSON.$fFromJSONInt
                   @ a1
                   w3) -}
d16a73ae42f5ddb4c74de81831247c0c
  $fFromJSONUser9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$fFromJSONUser10) -}
1742e72607cb765e2577200d44322d15
  $fFromJSONUser_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser Main.User
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (x :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          ((GHC.Generics.:*:)
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Maybe.Just "userId")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Types.Int))
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Maybe.Just "userName")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Base.String))
                             GHC.Types.Any)
                   = case x of wild {
                       DEFAULT
                       -> let {
                            msg20 :: GHC.Base.String
                            = GHC.CString.unpackAppendCString#
                                Data.Aeson.Types.FromJSON.typeMismatch4
                                (GHC.Base.++
                                   @ GHC.Types.Char
                                   Data.Aeson.Types.FromJSON.$fConsFromJSON'TYPEarityfTrue1
                                   (GHC.CString.unpackAppendCString#
                                      Data.Aeson.Types.FromJSON.typeMismatch3
                                      (case wild of wild1 {
                                         Data.Aeson.Types.Internal.Array ds
                                         -> Data.Aeson.Types.FromJSON.typeMismatch1
                                         Data.Aeson.Types.Internal.String ds
                                         -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList8
                                         Data.Aeson.Types.Internal.Number ds
                                         -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList6
                                         Data.Aeson.Types.Internal.Bool ds
                                         -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList4
                                         Data.Aeson.Types.Internal.Null
                                         -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList1 })))
                          } in
                          (\ @ f4 :: * -> *
                             @ r
                             (path :: Data.Aeson.Types.Internal.JSONPath)
                             (kf :: Data.Aeson.Types.Internal.Failure f4 r)[OneShot]
                             (_ks :: Data.Aeson.Types.Internal.Success
                                       ((GHC.Generics.:*:)
                                          (GHC.Generics.S1
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Maybe.Just "userId")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.Rec0 GHC.Types.Int))
                                          (GHC.Generics.S1
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Maybe.Just "userName")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.Rec0 GHC.Base.String))
                                          GHC.Types.Any)
                                       f4
                                       r)[OneShot] ->
                           kf
                             (GHC.List.reverse @ Data.Aeson.Types.Internal.JSONPathElement path)
                             msg20)
                            `cast`
                          (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                    <(GHC.Generics.:*:)
                                       (GHC.Generics.S1
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Maybe.Just "userId")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.Rec0 GHC.Types.Int))
                                       (GHC.Generics.S1
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Maybe.Just "userName")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.Rec0 GHC.Base.String))
                                       GHC.Types.Any>_R))
                       Data.Aeson.Types.Internal.Object obj
                       -> Main.$fFromJSONUser4
                            @ GHC.Types.Any
                            Main.$fFromJSONUser_opts
                            (Data.Aeson.Types.FromJSON.$WNoFromArgs @ GHC.Types.Any)
                            obj }
                 } in
                 (\ @ f5 :: * -> *
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f5 r)
                    (ks :: Data.Aeson.Types.Internal.Success Main.User f5 r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       <(GHC.Generics.:*:)
                          (GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Maybe.Just "userId")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 GHC.Types.Int))
                          (GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Maybe.Just "userName")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 GHC.Base.String))
                          GHC.Types.Any>_R)
                    @ f5
                    @ r
                    path
                    kf
                    (\ (a2 :: (GHC.Generics.:*:)
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Maybe.Just "userId")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Types.Int))
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Maybe.Just "userName")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Base.String))
                                GHC.Types.Any) ->
                     ks
                       (case a2 of wild { GHC.Generics.:*: ds ds1 ->
                        Main.User
                          ds
                            `cast`
                          (GHC.Generics.N:M1[0]
                               <*>_N
                               <GHC.Generics.S>_P
                               <'GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "userId")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy>_P
                               <GHC.Generics.K1
                                  GHC.Generics.R
                                  GHC.Types.Int>_R <GHC.Types.Any>_N ; GHC.Generics.N:K1[0]
                                                                           <*>_N
                                                                           <GHC.Generics.R>_P
                                                                           <GHC.Types.Int>_R
                                                                           <GHC.Types.Any>_P)
                          ds1
                            `cast`
                          (GHC.Generics.N:M1[0]
                               <*>_N
                               <GHC.Generics.S>_P
                               <'GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "userName")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy>_P
                               <GHC.Generics.K1
                                  GHC.Generics.R
                                  GHC.Base.String>_R <GHC.Types.Any>_N ; GHC.Generics.N:K1[0]
                                                                             <*>_N
                                                                             <GHC.Generics.R>_P
                                                                             <GHC.Base.String>_R
                                                                             <GHC.Types.Any>_P) })))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0] <Main.User>_R))) -}
1742e72607cb765e2577200d44322d15
  $fFromJSONUser_$cparseJSONList ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser [Main.User]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Data.Aeson.Types.Internal.Value) ->
                 case ds of wild {
                   DEFAULT
                   -> let {
                        msg20 :: GHC.Base.String
                        = GHC.CString.unpackAppendCString#
                            Main.$fFromJSONUser3
                            (GHC.CString.unpackAppendCString#
                               Main.$fFromJSONUser2
                               (GHC.CString.unpackAppendCString#
                                  Main.$fFromJSONUser1
                                  (case wild of wild1 {
                                     Data.Aeson.Types.Internal.Object ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList10
                                     Data.Aeson.Types.Internal.String ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList8
                                     Data.Aeson.Types.Internal.Number ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList6
                                     Data.Aeson.Types.Internal.Bool ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList4
                                     Data.Aeson.Types.Internal.Null
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList1 })))
                      } in
                      (\ @ f4 :: * -> *
                         @ r
                         (path :: Data.Aeson.Types.Internal.JSONPath)
                         (kf :: Data.Aeson.Types.Internal.Failure f4 r)
                         (_ks :: Data.Aeson.Types.Internal.Success [Main.User] f4 r) ->
                       kf
                         (GHC.List.reverse @ Data.Aeson.Types.Internal.JSONPathElement path)
                         msg20)
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0] <[Main.User]>_R))
                   Data.Aeson.Types.Internal.Array a1
                   -> case a1 of wild1 { Data.Vector.Vector dt dt1 dt2 ->
                      letrec {
                        $wgo :: GHC.Prim.Int# -> [Data.Aeson.Types.Internal.Value]
                          {- Arity: 1, Strictness: <S,U>, Inline: [2] -}
                        = \ (ww :: GHC.Prim.Int#) ->
                          case GHC.Prim.>=# ww dt1 of lwild {
                            DEFAULT
                            -> case GHC.Prim.indexArray#
                                      @ Data.Aeson.Types.Internal.Value
                                      dt2
                                      (GHC.Prim.+# dt ww) of ds2 { Unit# ipv ->
                               GHC.Types.:
                                 @ Data.Aeson.Types.Internal.Value
                                 ipv
                                 ($wgo (GHC.Prim.+# ww 1#)) }
                            1# -> GHC.Types.[] @ Data.Aeson.Types.Internal.Value }
                      } in
                      Main.$fFromJSONUser_go 0# ($wgo 0#) } }) -}
4cddf02c99cb38e05cc5686c1218c098
  $fFromJSONUser_$s$fFromJSON[] ::
    Data.Aeson.Types.FromJSON.FromJSON [GHC.Types.Char]
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ [GHC.Types.Char]
                  Data.Aeson.Types.FromJSON.$fFromJSONChar_$cparseJSONList
                  (Data.Aeson.Types.FromJSON.$fFromJSONKey[]_$cparseJSONList
                     @ GHC.Types.Char
                     Data.Aeson.Types.FromJSON.$fFromJSONChar) -}
b583867959de66c6edefe5ce233eb81d
  $fFromJSONUser_$s$fSelectorMetaMetaSel ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Maybe.Just "userName")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Maybe.Just "userName")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (eta :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "userName")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   Main.$fFromJSONUser6)
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (ds1 :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "userName")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   case GHC.Generics.$WSNoSourceUnpackedness
                          `cast`
                        (GHC.Generics.D:R:SingSourceUnpackednessa0[0] <'GHC.Generics.NoSourceUnpackedness>_N) of wild { GHC.Generics.SNoSourceUnpackedness co ->
                   GHC.Generics.NoSourceUnpackedness
                     `cast`
                   (Sub (Sym (GHC.Generics.D:R:DemoteRepSourceUnpackedness[0]))) })
                    `cast`
                  (forall (k :: <*>_N) (t :: <GHC.Generics.Meta
                                              -> (k -> *) -> k -> *>_N) (f :: <k
                                                                               -> *>_N) (a :: <k>_N).
                   <t ('GHC.Generics.MetaSel
                         ('GHC.Maybe.Just "userName")
                         'GHC.Generics.NoSourceUnpackedness
                         'GHC.Generics.NoSourceStrictness
                         'GHC.Generics.DecidedLazy) f a>_R
                   ->_R Sub (GHC.Generics.D:R:DemoteRepSourceUnpackedness[0]))
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (ds1 :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "userName")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   case GHC.Generics.$WSNoSourceStrictness
                          `cast`
                        (GHC.Generics.D:R:SingSourceStrictnessa0[0] <'GHC.Generics.NoSourceStrictness>_N) of wild { GHC.Generics.SNoSourceStrictness co ->
                   GHC.Generics.NoSourceStrictness
                     `cast`
                   (Sub (Sym (GHC.Generics.D:R:DemoteRepSourceStrictness[0]))) })
                    `cast`
                  (forall (k :: <*>_N) (t :: <GHC.Generics.Meta
                                              -> (k -> *) -> k -> *>_N) (f :: <k
                                                                               -> *>_N) (a :: <k>_N).
                   <t ('GHC.Generics.MetaSel
                         ('GHC.Maybe.Just "userName")
                         'GHC.Generics.NoSourceUnpackedness
                         'GHC.Generics.NoSourceStrictness
                         'GHC.Generics.DecidedLazy) f a>_R
                   ->_R Sub (GHC.Generics.D:R:DemoteRepSourceStrictness[0]))
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (ds1 :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "userName")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   case GHC.Generics.$WSDecidedLazy
                          `cast`
                        (GHC.Generics.D:R:SingDecidedStrictnessa0[0] <'GHC.Generics.DecidedLazy>_N) of wild { GHC.Generics.SDecidedLazy co ->
                   GHC.Generics.DecidedLazy
                     `cast`
                   (Sub (Sym (GHC.Generics.D:R:DemoteRepDecidedStrictness[0]))) })
                    `cast`
                  (forall (k :: <*>_N) (t :: <GHC.Generics.Meta
                                              -> (k -> *) -> k -> *>_N) (f :: <k
                                                                               -> *>_N) (a :: <k>_N).
                   <t ('GHC.Generics.MetaSel
                         ('GHC.Maybe.Just "userName")
                         'GHC.Generics.NoSourceUnpackedness
                         'GHC.Generics.NoSourceStrictness
                         'GHC.Generics.DecidedLazy) f a>_R
                   ->_R Sub (GHC.Generics.D:R:DemoteRepDecidedStrictness[0])) -}
66a81f545e8f4b0cae04c1fb25495f4d
  $fFromJSONUser_$s$fSelectorMetaMetaSel1 ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Maybe.Just "userId")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Maybe.Just "userId")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (eta :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "userId")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   Main.$fFromJSONUser9)
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (ds1 :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "userId")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   case GHC.Generics.$WSNoSourceUnpackedness
                          `cast`
                        (GHC.Generics.D:R:SingSourceUnpackednessa0[0] <'GHC.Generics.NoSourceUnpackedness>_N) of wild { GHC.Generics.SNoSourceUnpackedness co ->
                   GHC.Generics.NoSourceUnpackedness
                     `cast`
                   (Sub (Sym (GHC.Generics.D:R:DemoteRepSourceUnpackedness[0]))) })
                    `cast`
                  (forall (k :: <*>_N) (t :: <GHC.Generics.Meta
                                              -> (k -> *) -> k -> *>_N) (f :: <k
                                                                               -> *>_N) (a :: <k>_N).
                   <t ('GHC.Generics.MetaSel
                         ('GHC.Maybe.Just "userId")
                         'GHC.Generics.NoSourceUnpackedness
                         'GHC.Generics.NoSourceStrictness
                         'GHC.Generics.DecidedLazy) f a>_R
                   ->_R Sub (GHC.Generics.D:R:DemoteRepSourceUnpackedness[0]))
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (ds1 :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "userId")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   case GHC.Generics.$WSNoSourceStrictness
                          `cast`
                        (GHC.Generics.D:R:SingSourceStrictnessa0[0] <'GHC.Generics.NoSourceStrictness>_N) of wild { GHC.Generics.SNoSourceStrictness co ->
                   GHC.Generics.NoSourceStrictness
                     `cast`
                   (Sub (Sym (GHC.Generics.D:R:DemoteRepSourceStrictness[0]))) })
                    `cast`
                  (forall (k :: <*>_N) (t :: <GHC.Generics.Meta
                                              -> (k -> *) -> k -> *>_N) (f :: <k
                                                                               -> *>_N) (a :: <k>_N).
                   <t ('GHC.Generics.MetaSel
                         ('GHC.Maybe.Just "userId")
                         'GHC.Generics.NoSourceUnpackedness
                         'GHC.Generics.NoSourceStrictness
                         'GHC.Generics.DecidedLazy) f a>_R
                   ->_R Sub (GHC.Generics.D:R:DemoteRepSourceStrictness[0]))
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (ds1 :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "userId")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   case GHC.Generics.$WSDecidedLazy
                          `cast`
                        (GHC.Generics.D:R:SingDecidedStrictnessa0[0] <'GHC.Generics.DecidedLazy>_N) of wild { GHC.Generics.SDecidedLazy co ->
                   GHC.Generics.DecidedLazy
                     `cast`
                   (Sub (Sym (GHC.Generics.D:R:DemoteRepDecidedStrictness[0]))) })
                    `cast`
                  (forall (k :: <*>_N) (t :: <GHC.Generics.Meta
                                              -> (k -> *) -> k -> *>_N) (f :: <k
                                                                               -> *>_N) (a :: <k>_N).
                   <t ('GHC.Generics.MetaSel
                         ('GHC.Maybe.Just "userId")
                         'GHC.Generics.NoSourceUnpackedness
                         'GHC.Generics.NoSourceStrictness
                         'GHC.Generics.DecidedLazy) f a>_R
                   ->_R Sub (GHC.Generics.D:R:DemoteRepDecidedStrictness[0])) -}
1742e72607cb765e2577200d44322d15
  $fFromJSONUser_go ::
    GHC.Prim.Int#
    -> [Data.Aeson.Types.Internal.Value]
    -> Data.Aeson.Types.Internal.Parser [Main.User]
  {- Arity: 2, Strictness: <L,U><S,1*U> -}
363562640b783b71b62d0f81d8c0670e
  $fFromJSONUser_opts :: Data.Aeson.Types.Internal.Options
  {- Strictness: m,
     Unfolding: (Data.Aeson.Types.Internal.Options
                   (GHC.Base.id @ GHC.Base.String)
                   (GHC.Base.id @ GHC.Base.String)
                   GHC.Types.True
                   GHC.Types.False
                   Data.Aeson.Types.Internal.defaultTaggedObject
                   GHC.Types.False
                   GHC.Types.False) -}
1742e72607cb765e2577200d44322d15
  $fGenericUser :: GHC.Generics.Generic Main.User
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Main.User
                  Main.$fGenericUser1
                    `cast`
                  (forall (x :: <*>_N).
                   <Main.User>_R
                   ->_R (Sym (GHC.Generics.N:M1[0]
                                  <*>_N
                                  <GHC.Generics.D>_P
                                  <'GHC.Generics.MetaData "User" "Main" "main" 'GHC.Types.False>_P
                                  <GHC.Generics.M1
                                     GHC.Generics.C
                                     ('GHC.Generics.MetaCons
                                        "User" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                     (GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Maybe.Just "userId")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                      GHC.Generics.:*: GHC.Generics.M1
                                                         GHC.Generics.S
                                                         ('GHC.Generics.MetaSel
                                                            ('GHC.Maybe.Just "userName")
                                                            'GHC.Generics.NoSourceUnpackedness
                                                            'GHC.Generics.NoSourceStrictness
                                                            'GHC.Generics.DecidedLazy)
                                                         (GHC.Generics.K1
                                                            GHC.Generics.R
                                                            GHC.Base.String))>_R) ; Sub (Sym (Main.Rep_User[0]))) <x>_N)
                  Main.$fGenericUser_$cto -}
1742e72607cb765e2577200d44322d15
  $fGenericUser1 ::
    Main.User
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "User" 'GHC.Generics.PrefixI 'GHC.Types.True)
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               ('GHC.Maybe.Just "userId")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
          GHC.Generics.:*: GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                ('GHC.Maybe.Just "userName")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (x1 :: Main.User) ->
                 case x1 of wild { Main.User g1 g2 ->
                 (GHC.Generics.:*:
                    @ *
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Maybe.Just "userId")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int))
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Maybe.Just "userName")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                    @ x
                    g1
                      `cast`
                    (Sym (GHC.Generics.N:K1[0]
                              <*>_N
                              <GHC.Generics.R>_P
                              <GHC.Types.Int>_R
                              <x>_P) ; Sym (GHC.Generics.N:M1[0]
                                                <*>_N
                                                <GHC.Generics.S>_P
                                                <'GHC.Generics.MetaSel
                                                   ('GHC.Maybe.Just "userId")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy>_P
                                                <GHC.Generics.K1
                                                   GHC.Generics.R GHC.Types.Int>_R) <x>_N)
                    g2
                      `cast`
                    (Sym (GHC.Generics.N:K1[0]
                              <*>_N
                              <GHC.Generics.R>_P
                              <GHC.Base.String>_R
                              <x>_P) ; Sym (GHC.Generics.N:M1[0]
                                                <*>_N
                                                <GHC.Generics.S>_P
                                                <'GHC.Generics.MetaSel
                                                   ('GHC.Maybe.Just "userName")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy>_P
                                                <GHC.Generics.K1
                                                   GHC.Generics.R GHC.Base.String>_R) <x>_N))
                   `cast`
                 (Sym (GHC.Generics.N:M1[0]
                           <*>_N
                           <GHC.Generics.C>_P
                           <'GHC.Generics.MetaCons
                              "User" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                           <GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Maybe.Just "userId")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                            GHC.Generics.:*: GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Maybe.Just "userName")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R GHC.Base.String)>_R) <x>_N) }) -}
1742e72607cb765e2577200d44322d15
  $fGenericUser_$cto :: GHC.Generics.Rep Main.User x -> Main.User
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (ds :: GHC.Generics.Rep Main.User x) ->
                 case ds
                        `cast`
                      ((Sub (Main.Rep_User[0]) ; (GHC.Generics.N:M1[0]
                                                      <*>_N
                                                      <GHC.Generics.D>_P
                                                      <'GHC.Generics.MetaData
                                                         "User" "Main" "main" 'GHC.Types.False>_P
                                                      <GHC.Generics.M1
                                                         GHC.Generics.C
                                                         ('GHC.Generics.MetaCons
                                                            "User"
                                                            'GHC.Generics.PrefixI
                                                            'GHC.Types.True)
                                                         (GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Maybe.Just "userId")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R GHC.Types.Int)
                                                          GHC.Generics.:*: GHC.Generics.M1
                                                                             GHC.Generics.S
                                                                             ('GHC.Generics.MetaSel
                                                                                ('GHC.Maybe.Just
                                                                                   "userName")
                                                                                'GHC.Generics.NoSourceUnpackedness
                                                                                'GHC.Generics.NoSourceStrictness
                                                                                'GHC.Generics.DecidedLazy)
                                                                             (GHC.Generics.K1
                                                                                GHC.Generics.R
                                                                                GHC.Base.String))>_R ; GHC.Generics.N:M1[0]
                                                                                                           <*>_N
                                                                                                           <GHC.Generics.C>_P
                                                                                                           <'GHC.Generics.MetaCons
                                                                                                              "User"
                                                                                                              'GHC.Generics.PrefixI
                                                                                                              'GHC.Types.True>_P
                                                                                                           <GHC.Generics.M1
                                                                                                              GHC.Generics.S
                                                                                                              ('GHC.Generics.MetaSel
                                                                                                                 ('GHC.Maybe.Just
                                                                                                                    "userId")
                                                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                                                 'GHC.Generics.DecidedLazy)
                                                                                                              (GHC.Generics.K1
                                                                                                                 GHC.Generics.R
                                                                                                                 GHC.Types.Int)
                                                                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                                                                               GHC.Generics.S
                                                                                                                               ('GHC.Generics.MetaSel
                                                                                                                                  ('GHC.Maybe.Just
                                                                                                                                     "userName")
                                                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                                                               (GHC.Generics.K1
                                                                                                                                  GHC.Generics.R
                                                                                                                                  GHC.Base.String)>_R)) <x>_N) of wild { GHC.Generics.:*: ds1 ds2 ->
                 Main.User
                   ds1
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Maybe.Just "userId")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R GHC.Types.Int>_R <x>_N ; GHC.Generics.N:K1[0]
                                                                       <*>_N
                                                                       <GHC.Generics.R>_P
                                                                       <GHC.Types.Int>_R
                                                                       <x>_P)
                   ds2
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Maybe.Just "userName")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R GHC.Base.String>_R <x>_N ; GHC.Generics.N:K1[0]
                                                                         <*>_N
                                                                         <GHC.Generics.R>_P
                                                                         <GHC.Base.String>_R
                                                                         <x>_P) }) -}
1742e72607cb765e2577200d44322d15
  $fShowUser :: GHC.Show.Show Main.User
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Main.User
                  Main.$fShowUser_$cshowsPrec
                  Main.$fShowUser_$cshow
                  Main.$fShowUser_$cshowList -}
1742e72607cb765e2577200d44322d15
  $fShowUser1 :: Main.User -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U(1*U(U),1*U)><L,U>,
     Unfolding: (\ (w :: Main.User) (w1 :: GHC.Base.String) ->
                 case w of ww { Main.User ww1 ww2 ->
                 Main.$w$cshowsPrec 0# ww1 ww2 w1 }) -}
9c39774439d4b196f2c4274185937f8a
  $fShowUser2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("}"#) -}
f5e1329050e127022960bce86f1f1f36
  $fShowUser3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("userName = "#) -}
af5db10b36f0b7ae8aa68cd311f74ba2
  $fShowUser4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("userId = "#) -}
06b1a0ab6b6fa1a8eb1e5d4b24264fbd
  $fShowUser5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("User {"#) -}
376aef3a36f99bdb4175d8659155ca90
  $fShowUser6 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.$fShow(,)3
                   Main.$fShowUser7) -}
bcf96eb5bb57e42a1f8b7be61c118dc8
  $fShowUser7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackAppendCString#
                   Main.$fShowUser2
                   (GHC.Types.[] @ GHC.Types.Char)) -}
1742e72607cb765e2577200d44322d15
  $fShowUser_$cshow :: Main.User -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U(U),1*U)>, Inline: [2],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Main.User) ->
                 case w of ww { Main.User ww1 ww2 -> Main.$w$cshow ww1 ww2 }) -}
1742e72607cb765e2577200d44322d15
  $fShowUser_$cshowList :: [Main.User] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Main.User]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__ @ Main.User Main.$fShowUser1 ls s) -}
1742e72607cb765e2577200d44322d15
  $fShowUser_$cshowsPrec ::
    GHC.Types.Int -> Main.User -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U(1*U(U),1*U)><L,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Main.User)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Main.User ww3 ww4 ->
                 Main.$w$cshowsPrec ww1 ww3 ww4 w2 } }) -}
1742e72607cb765e2577200d44322d15
  $fToJSONUser :: Data.Aeson.Types.ToJSON.ToJSON Main.User
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Main.User
                  Main.$fToJSONUser_$ctoJSON
                  Main.$fToJSONUser_$ctoEncoding
                  Main.$fToJSONUser_$ctoJSONList
                  Main.$fToJSONUser_$ctoEncodingList -}
f2be83fa7cbb0015740dc41f70a710cd
  $fToJSONUser1 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '[ 'GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                        Main.$fToJSONUser2 of ds1 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
d619e9dbd33d493c492a39f1db959592
  $fToJSONUser2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s1 of ds1 { (#,#) ipv1 ipv2 ->
                 Data.Aeson.Types.ToJSON.$wouter1
                   ipv2
                   4#
                   Main.$fFromJSONUser6
                   0#
                   ipv1 }) -}
c52a657515abe8ed74655d975659390c
  $fToJSONUser3 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '[ 'GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                        Main.$fToJSONUser4 of ds1 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
faa4fe5bacc2114d3685f0fe4117bcb3
  $fToJSONUser4 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s1 of ds1 { (#,#) ipv1 ipv2 ->
                 Data.Aeson.Types.ToJSON.$wouter1
                   ipv2
                   4#
                   Main.$fFromJSONUser9
                   0#
                   ipv1 }) -}
1742e72607cb765e2577200d44322d15
  $fToJSONUser_$ctoEncoding ::
    Main.User -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U(1*U(U),1*U)>, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (x :: Main.User) ->
                 Data.Aeson.Encoding.Builder.encodeToBuilder
                   (Main.$fToJSONUser_$ctoJSON x))
                  `cast`
                (<Main.User>_R
                 ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                               <Data.Aeson.Types.Internal.Value>_P)) -}
1742e72607cb765e2577200d44322d15
  $fToJSONUser_$ctoEncodingList ::
    [Main.User] -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (Data.Aeson.Encoding.Internal.list
                   @ Main.User
                   Main.$fToJSONUser_$ctoEncoding) -}
1742e72607cb765e2577200d44322d15
  $fToJSONUser_$ctoJSON ::
    Main.User -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U(1*U(U),1*U)>m1, Inline: [2],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Main.User) ->
                 case w of ww { Main.User ww1 ww2 ->
                 case Main.$w$ctoJSON ww1 ww2 of ww3 { Unit# ww4 ->
                 Data.Aeson.Types.Internal.Object ww4 } }) -}
1742e72607cb765e2577200d44322d15
  $fToJSONUser_$ctoJSONList ::
    [Main.User] -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (x :: [Main.User]) ->
                 Data.Aeson.Types.Internal.$WArray
                   (Data.Vector.Generic.new
                      @ Data.Vector.Vector
                      @ Data.Aeson.Types.Internal.Value
                      (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                      (Data.Vector.Generic.New.unstream
                         @ Data.Vector.Vector
                         @ Data.Aeson.Types.Internal.Value
                         (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                         (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                            @ Data.Vector.Fusion.Util.Id
                            @ Data.Aeson.Types.Internal.Value
                            @ Data.Vector.Vector
                            Data.Vector.Fusion.Util.$fMonadId
                            Data.Vector.Fusion.Bundle.Size.Unknown
                            (GHC.Base.build
                               @ Data.Aeson.Types.Internal.Value
                               (\ @ b1
                                  (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                  (n1 :: b1)[OneShot] ->
                                GHC.Base.foldr
                                  @ Main.User
                                  @ b1
                                  (GHC.Base.mapFB
                                     @ Data.Aeson.Types.Internal.Value
                                     @ b1
                                     @ Main.User
                                     c
                                     Main.$fToJSONUser_$ctoJSON)
                                  n1
                                  x)))))) -}
7d716594cacc99044321b8f27866b515
  $s$fConstructorMetaMetaCons2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("User"#) -}
d32c94409fe5ab2ce53ce0e1fd114a3a
  $s$fToJSON[] :: Data.Aeson.Types.ToJSON.ToJSON [Main.User]
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ [Main.User]
                  Main.$fToJSONUser_$ctoJSONList
                  Main.$fToJSONUser_$ctoEncodingList
                  (\ (x :: [[Main.User]]) ->
                   Data.Aeson.Types.Internal.$WArray
                     (Data.Vector.Generic.new
                        @ Data.Vector.Vector
                        @ Data.Aeson.Types.Internal.Value
                        (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                        (Data.Vector.Generic.New.unstream
                           @ Data.Vector.Vector
                           @ Data.Aeson.Types.Internal.Value
                           (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                           (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                              @ Data.Vector.Fusion.Util.Id
                              @ Data.Aeson.Types.Internal.Value
                              @ Data.Vector.Vector
                              Data.Vector.Fusion.Util.$fMonadId
                              Data.Vector.Fusion.Bundle.Size.Unknown
                              (GHC.Base.build
                                 @ Data.Aeson.Types.Internal.Value
                                 (\ @ b1
                                    (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                    (n1 :: b1)[OneShot] ->
                                  GHC.Base.foldr
                                    @ [Main.User]
                                    @ b1
                                    (GHC.Base.mapFB
                                       @ Data.Aeson.Types.Internal.Value
                                       @ b1
                                       @ [Main.User]
                                       c
                                       Main.$fToJSONUser_$ctoJSONList)
                                    n1
                                    x))))))
                  (Data.Aeson.Encoding.Internal.list
                     @ [Main.User]
                     Main.$fToJSONUser_$ctoEncodingList) -}
2fcf8bf1decadaaf76f8f72d66b7430b
  $tc'User :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11946000597272154797##
                   14513426697953938300##
                   Main.$trModule
                   Main.$tc'User2
                   0#
                   Main.$tc'User1) -}
79b6144f6dc0b92368d27e4a147995e3
  $tc'User1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
22c86b5f84a74d2f231dd5f2b7be02e7
  $tc'User2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'User3) -}
72a67a33dea96547d55a61725feeda8e
  $tc'User3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'User"#) -}
eb9a648c73d3addc0ac561bd13df29b5
  $tcUser :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3086115112404147262##
                   4933156830667254212##
                   Main.$trModule
                   Main.$tcUser1
                   0#
                   GHC.Types.krep$*) -}
93fc008141cbd1311e8f4a45d745bdf5
  $tcUser1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$s$fConstructorMetaMetaCons2) -}
be86c9d078d3acbf19ba91fe74a24273
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule3 Main.$trModule1) -}
b09d86f2c49dd5176b544d8d13ddb6c5
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule2) -}
e5875966b74dad2d29772660b8a75e33
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Main"#) -}
23b03bd7d075a00f5ad1ee10e6add7b8
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule4) -}
d026be77cb9ced20e35a61514e0458aa
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
40fcf92f29f4e8063c7a04e453d1aae9
  $w$cshow :: GHC.Types.Int -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, Strictness: <L,1*U(U)><L,1*U>, Inline: [2],
     Unfolding: (\ (ww :: GHC.Types.Int) (ww1 :: GHC.Base.String) ->
                 GHC.CString.unpackAppendCString#
                   Main.$fShowUser5
                   (GHC.CString.unpackAppendCString#
                      Main.$fShowUser4
                      (case ww of ww2 { GHC.Types.I# ww3 ->
                       case GHC.Show.$wshowSignedInt
                              0#
                              ww3
                              (GHC.Base.++
                                 @ GHC.Types.Char
                                 GHC.Show.showCommaSpace1
                                 (GHC.CString.unpackAppendCString#
                                    Main.$fShowUser3
                                    (GHC.Types.:
                                       @ GHC.Types.Char
                                       GHC.Show.$fShow(,)3
                                       (GHC.Show.showLitString
                                          ww1
                                          Main.$fShowUser6)))) of ww4 { (#,#) ww5 ww6 ->
                       GHC.Types.: @ GHC.Types.Char ww5 ww6 } }))) -}
10b5482694dd3699e44e53c4f4ef37fe
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 4, Strictness: <S,U><L,1*U(U)><L,1*U><L,U>, Inline: [2],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Types.Int)
                   (ww2 :: GHC.Base.String)
                   (w :: GHC.Base.String) ->
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                   = \ (x :: GHC.Base.String)[OneShot] ->
                     GHC.CString.unpackAppendCString#
                       Main.$fShowUser5
                       (GHC.CString.unpackAppendCString#
                          Main.$fShowUser4
                          (case ww1 of ww3 { GHC.Types.I# ww4 ->
                           case GHC.Show.$wshowSignedInt
                                  0#
                                  ww4
                                  (GHC.Base.++
                                     @ GHC.Types.Char
                                     GHC.Show.showCommaSpace1
                                     (GHC.CString.unpackAppendCString#
                                        Main.$fShowUser3
                                        (GHC.Types.:
                                           @ GHC.Types.Char
                                           GHC.Show.$fShow(,)3
                                           (GHC.Show.showLitString
                                              ww2
                                              (GHC.Types.:
                                                 @ GHC.Types.Char
                                                 GHC.Show.$fShow(,)3
                                                 (GHC.CString.unpackAppendCString#
                                                    Main.$fShowUser2
                                                    x)))))) of ww5 { (#,#) ww6 ww7 ->
                           GHC.Types.: @ GHC.Types.Char ww6 ww7 } }))
                 } in
                 case GHC.Prim.>=# ww 11# of lwild {
                   DEFAULT -> p w
                   1#
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShow(,)4
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 w)) }) -}
4eb43c7ed05205d09d5b827a1bd1d402
  $w$ctoJSON ::
    GHC.Types.Int
    -> GHC.Base.String -> (# Data.Aeson.Types.Internal.Object #)
  {- Arity: 2, Strictness: <L,1*U(U)><L,1*U>, Inline: [2],
     Unfolding: (\ (ww :: GHC.Types.Int) (ww1 :: GHC.Base.String) ->
                 case Data.Aeson.Types.ToJSON.$fFromPairsValueDList_go
                        (GHC.Types.:
                           @ Data.Aeson.Types.Internal.Pair
                           (Main.$fToJSONUser3,
                            case ww of wild { GHC.Types.I# i ->
                            case GHC.Integer.Type.smallInteger i of dt { DEFAULT ->
                            Data.Aeson.Types.Internal.Number
                              (Data.Scientific.Scientific dt 0#) } })
                           (GHC.Types.:
                              @ Data.Aeson.Types.Internal.Pair
                              (Main.$fToJSONUser1,
                               case GHC.Magic.runRW#
                                      @ ('GHC.Types.TupleRep
                                           '[ 'GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                                      @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                                           Data.Text.Internal.Text #)
                                      (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                       case GHC.Prim.newByteArray#
                                              @ GHC.Prim.RealWorld
                                              10#
                                              s1 of ds1 { (#,#) ipv ipv1 ->
                                       Main.$wouter ipv1 4# ww1 0# ipv }) of ds1 { (#,#) ipv ipv1 ->
                               case ipv1 of dt { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                               Data.Aeson.Types.Internal.String dt } })
                              (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair)))
                        (Data.HashMap.Base.Empty
                           @ Data.Text.Internal.Text
                           @ Data.Aeson.Types.Internal.Value) of ww2 { Data.Aeson.Types.Internal.Object ww3 ->
                 (# ww3 #) }) -}
9f1048776d66ee8be89f49dc722fc4c7
  $wouter ::
    GHC.Prim.MutableByteArray# GHC.Prim.RealWorld
    -> GHC.Prim.Int#
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U><S,U><S,1*U><S,U><S,U>,
     Inline: [2] -}
1742e72607cb765e2577200d44322d15
  axiom Main.Rep_User::
      GHC.Generics.Rep Main.User
        = GHC.Generics.D1
            ('GHC.Generics.MetaData "User" "Main" "main" 'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "User" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Maybe.Just "userId")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 GHC.Types.Int)
                GHC.Generics.:*: GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Maybe.Just "userName")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Base.String)))
1742e72607cb765e2577200d44322d15
  data User
    = User {userId :: GHC.Types.Int, userName :: GHC.Base.String}
299b9754231a0a8eb78ec3406d01b072
  allUsers :: [Main.User]
  {- Strictness: m2,
     Unfolding: (GHC.Types.: @ Main.User Main.bob Main.allUsers1) -}
6f09d77d69881624491637605a5e4010
  allUsers1 :: [Main.User]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Main.User
                   Main.jenny
                   (GHC.Types.[] @ Main.User)) -}
576531ee58c9ab6794061dc8f1803c40
  bob :: Main.User
  {- Strictness: m, Unfolding: (Main.User Main.bob3 Main.bob1) -}
982ed1e0f2db31b9589c2b35e9cc86ef
  bob1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.bob2) -}
6a0c378519476ed454a2340f958731ee
  bob2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("bob"#) -}
e2f9dab523292b647c930e4d0d6a691a
  bob3 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1#) -}
a6499d9b817438c02448a87fb37248b0
  jenny :: Main.User
  {- Strictness: m, Unfolding: (Main.User Main.jenny3 Main.jenny1) -}
fd6345d4fe07025a5232072294a52e58
  jenny1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.jenny2) -}
63f60abb72d3543db391a40fe64dfa8c
  jenny2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("jenny"#) -}
651e42f3c2aa9551b13dac8d1a1a23a1
  jenny3 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 2#) -}
ef604522797d30d24df4d4026489c3e0
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
d8323bb600a6751e3e4519041033df18
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (GHC.IO.Handle.Text.hPutStr'
                         GHC.IO.Handle.FD.stdout
                         Main.main21
                         GHC.Types.True)
                        `cast`
                      (GHC.Types.N:IO[0] <()>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 Web.Scotty.scotty1
                   Main.main20
                   Main.main2
                     `cast`
                   ((<Web.Scotty.Internal.Types.ScottyState
                        Data.Text.Internal.Lazy.Text GHC.Types.IO>_R
                     ->_R Nth:3
                              (<Web.Scotty.Internal.Types.ScottyState
                                  Data.Text.Internal.Lazy.Text GHC.Types.IO>_R
                               ->_R Nth:3
                                        (<Web.Scotty.Internal.Types.ScottyState
                                            Data.Text.Internal.Lazy.Text GHC.Types.IO>_R
                                         ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                                       <((),
                                                         Web.Scotty.Internal.Types.ScottyState
                                                           Data.Text.Internal.Lazy.Text
                                                           GHC.Types.IO)>_R)))) ; (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                                                                            <Web.Scotty.Internal.Types.ScottyState
                                                                                               Data.Text.Internal.Lazy.Text
                                                                                               GHC.Types.IO>_N
                                                                                            <Data.Functor.Identity.Identity>_R
                                                                                            <()>_N) ; Sym (Web.Scotty.Internal.Types.N:ScottyT[0]
                                                                                                               <Data.Text.Internal.Lazy.Text>_N
                                                                                                               <GHC.Types.IO>_N) <()>_N))
                   ipv }) -}
4419d9cafd802850d295a25a78ff6e47
  main10 ::
    Web.Scotty.Internal.Types.ActionT
      Data.Text.Internal.Lazy.Text GHC.Types.IO ()
  {- Unfolding: (Web.Scotty.Action.$wjson
                   @ [Main.User]
                   @ Data.Text.Internal.Lazy.Text
                   @ GHC.Types.IO
                   Main.$s$fToJSON[]
                   GHC.Base.$fMonadIO
                   Main.allUsers) -}
e6f7842552ffd0e4a9201a36c198123a
  main11 :: Web.Scotty.Internal.Types.RoutePattern
  {- Strictness: m1,
     Unfolding: (Web.Scotty.Internal.Types.Capture Main.main12) -}
40be946036e0cc14992b15850b743c72
  main12 :: Data.Text.Internal.Lazy.Text
  {- Unfolding: (case GHC.CString.unpackFoldrCString#
                        @ [GHC.Types.Char]
                        Main.main13
                        Main.main8
                        (GHC.Types.[] @ GHC.Types.Char) of dt { DEFAULT ->
                 Web.Scotty.Internal.Types.$fIsStringRoutePattern_outer dt }) -}
1c7aaafeeeff408d51db6ba0173bbc39
  main13 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("/users"#) -}
0c4cd600d9da699670a0524fe92c3092
  main14 ::
    Web.Scotty.Internal.Types.ActionEnv
    -> Control.Monad.Trans.State.Lazy.StateT
         Web.Scotty.Internal.Types.ScottyResponse
         GHC.Types.IO
         (Data.Either.Either
            (Web.Scotty.Internal.Types.ActionError
               Data.Text.Internal.Lazy.Text)
            ())
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (w4 :: Web.Scotty.Internal.Types.ActionEnv) ->
                 Web.Scotty.Internal.Types.$w$c>>=
                   @ GHC.Types.IO
                   @ Data.Text.Internal.Lazy.Text
                   GHC.Base.$fMonadIO
                   @ GHC.Types.Int
                   @ ()
                   Main.main_w5
                   Main.main_w1
                   w4) -}
e38f44b598ea18955658a6db2a8bebfe
  main15 :: Data.Text.Internal.Lazy.Text
  {- Unfolding: (Data.Text.Lazy.unpackCString# Main.main16) -}
3f36b78d39602c43b940359fb4aa8eac
  main16 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("id"#) -}
10d25e8db499b81cfb0fbcfb4c4cb81e
  main17 :: Web.Scotty.Internal.Types.RoutePattern
  {- Strictness: m1,
     Unfolding: (Web.Scotty.Internal.Types.Capture Main.main18) -}
54c88f8a79a32159cc2ae83edb03cf30
  main18 :: Data.Text.Internal.Lazy.Text
  {- Unfolding: (case GHC.CString.unpackFoldrCString#
                        @ [GHC.Types.Char]
                        Main.main19
                        Main.main8
                        (GHC.Types.[] @ GHC.Types.Char) of dt { DEFAULT ->
                 Web.Scotty.Internal.Types.$fIsStringRoutePattern_outer dt }) -}
4f3bf06d10d49b0dea9c33e017b977ae
  main19 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("/users/:id"#) -}
25e0dd6b89a7f80183061de9c8fee033
  main2 ::
    Web.Scotty.Internal.Types.ScottyState
      Data.Text.Internal.Lazy.Text GHC.Types.IO
    -> ((),
        Web.Scotty.Internal.Types.ScottyState
          Data.Text.Internal.Lazy.Text GHC.Types.IO)
  {- Arity: 1, Strictness: <L,1*U(U,U,U)>m,
     Unfolding: (\ (s1 :: Web.Scotty.Internal.Types.ScottyState
                            Data.Text.Internal.Lazy.Text GHC.Types.IO)[OneShot] ->
                 (GHC.Tuple.(),
                  case s1 of wild { Web.Scotty.Internal.Types.ScottyState ds ds1 ds2 ->
                  Web.Scotty.Internal.Types.ScottyState
                    @ Data.Text.Internal.Lazy.Text
                    @ GHC.Types.IO
                    ds
                    (GHC.Types.:
                       @ (Web.Scotty.Internal.Types.Middleware GHC.Types.IO)
                       (Web.Scotty.Route.route
                          @ Data.Text.Internal.Lazy.Text
                          @ GHC.Types.IO
                          Web.Scotty.Internal.Types.$fScottyErrorText
                          Control.Monad.IO.Class.$fMonadIOIO
                          ds2
                          Web.Scotty.get2
                          Main.main17
                          Main.main14
                            `cast`
                          (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                    <Web.Scotty.Internal.Types.ActionEnv>_R
                                    <Control.Monad.Trans.State.Lazy.StateT
                                       Web.Scotty.Internal.Types.ScottyResponse GHC.Types.IO>_R
                                    <Data.Either.Either
                                       (Web.Scotty.Internal.Types.ActionError
                                          Data.Text.Internal.Lazy.Text)
                                       ()>_N) ; (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                          <Web.Scotty.Internal.Types.ActionError
                                                             Data.Text.Internal.Lazy.Text>_N
                                                          <Control.Monad.Trans.Reader.ReaderT
                                                             Web.Scotty.Internal.Types.ActionEnv
                                                             (Control.Monad.Trans.State.Lazy.StateT
                                                                Web.Scotty.Internal.Types.ScottyResponse
                                                                GHC.Types.IO)>_R
                                                          <()>_N) ; Sym (Web.Scotty.Internal.Types.N:ActionT[0]
                                                                             <Data.Text.Internal.Lazy.Text>_N
                                                                             <GHC.Types.IO>_R) <()>_N)))
                       (GHC.Types.:
                          @ (Web.Scotty.Internal.Types.Middleware GHC.Types.IO)
                          (Web.Scotty.Route.route
                             @ Data.Text.Internal.Lazy.Text
                             @ GHC.Types.IO
                             Web.Scotty.Internal.Types.$fScottyErrorText
                             Control.Monad.IO.Class.$fMonadIOIO
                             ds2
                             Web.Scotty.get2
                             Main.main11
                             Main.main10)
                          (GHC.Types.:
                             @ (Web.Scotty.Internal.Types.Middleware GHC.Types.IO)
                             (Web.Scotty.Route.route
                                @ Data.Text.Internal.Lazy.Text
                                @ GHC.Types.IO
                                Web.Scotty.Internal.Types.$fScottyErrorText
                                Control.Monad.IO.Class.$fMonadIOIO
                                ds2
                                Web.Scotty.get2
                                Main.main6
                                Main.main3
                                  `cast`
                                (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                          <Web.Scotty.Internal.Types.ActionEnv>_R
                                          <Control.Monad.Trans.State.Lazy.StateT
                                             Web.Scotty.Internal.Types.ScottyResponse
                                             GHC.Types.IO>_R
                                          <Data.Either.Either
                                             (Web.Scotty.Internal.Types.ActionError
                                                Data.Text.Internal.Lazy.Text)
                                             ()>_N) ; (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                <Web.Scotty.Internal.Types.ActionError
                                                                   Data.Text.Internal.Lazy.Text>_N
                                                                <Control.Monad.Trans.Reader.ReaderT
                                                                   Web.Scotty.Internal.Types.ActionEnv
                                                                   (Control.Monad.Trans.State.Lazy.StateT
                                                                      Web.Scotty.Internal.Types.ScottyResponse
                                                                      GHC.Types.IO)>_R
                                                                <()>_N) ; Sym (Web.Scotty.Internal.Types.N:ActionT[0]
                                                                                   <Data.Text.Internal.Lazy.Text>_N
                                                                                   <GHC.Types.IO>_R) <()>_N)))
                             ds1)))
                    ds2 })) -}
ce6c1890ed371c2bc6424311c00116e9
  main20 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 3000#) -}
525ca22dc9cb237bbe23e0121d0c04d1
  main21 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main22) -}
bd5e4292f750adb040c899cd49bf12ed
  main22 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("starting server ..."#) -}
f0041da76aff663a383304b930715762
  main23 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
bc9e71fdbaabbdff225ddfd0423fd367
  main3 ::
    Web.Scotty.Internal.Types.ActionEnv
    -> Control.Monad.Trans.State.Lazy.StateT
         Web.Scotty.Internal.Types.ScottyResponse
         GHC.Types.IO
         (Data.Either.Either
            (Web.Scotty.Internal.Types.ActionError
               Data.Text.Internal.Lazy.Text)
            ())
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (w4 :: Web.Scotty.Internal.Types.ActionEnv) ->
                 Web.Scotty.Internal.Types.$w$c>>=
                   @ GHC.Types.IO
                   @ Data.Text.Internal.Lazy.Text
                   GHC.Base.$fMonadIO
                   @ Data.Text.Internal.Lazy.Text
                   @ ()
                   Main.main_w2
                   Main.main_w3
                   w4) -}
8636c738dd8fdb467114c8236902a29d
  main4 :: Data.Text.Internal.Lazy.Text
  {- Unfolding: (Data.Text.Lazy.unpackCString# Main.main5) -}
2e498d1b5684fef0f9452ce199654d87
  main5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("name"#) -}
9242eb6e896ebbdf283215afc40786a9
  main6 :: Web.Scotty.Internal.Types.RoutePattern
  {- Strictness: m1,
     Unfolding: (Web.Scotty.Internal.Types.Capture Main.main7) -}
1bb212c2a52ffdc6fd7af81ec11d0fa0
  main7 :: Data.Text.Internal.Lazy.Text
  {- Unfolding: (case GHC.CString.unpackFoldrCString#
                        @ [GHC.Types.Char]
                        Main.main9
                        Main.main8
                        (GHC.Types.[] @ GHC.Types.Char) of dt { DEFAULT ->
                 Web.Scotty.Internal.Types.$fIsStringRoutePattern_outer dt }) -}
05bcb35b13537638a39cc78fc9610245
  main8 :: GHC.Types.Char -> [GHC.Types.Char] -> [GHC.Types.Char]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U(U)><L,U>m2,
     Unfolding: (\ (x :: GHC.Types.Char)
                   (ys :: [GHC.Types.Char])[OneShot] ->
                 GHC.Types.: @ GHC.Types.Char (Data.Text.Internal.safe x) ys) -}
064548f2da50f455d87dc56050f3213b
  main9 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("/hello/:name"#) -}
4f511b18dbf582f371c78f01144702df
  main_w1 ::
    GHC.Types.Int
    -> Web.Scotty.Internal.Types.ActionT
         Data.Text.Internal.Lazy.Text GHC.Types.IO ()
  {- Arity: 1, Strictness: <L,U(U)>,
     Unfolding: (\ (id :: GHC.Types.Int) ->
                 Web.Scotty.Action.$wjson
                   @ [Main.User]
                   @ Data.Text.Internal.Lazy.Text
                   @ GHC.Types.IO
                   Main.$s$fToJSON[]
                   GHC.Base.$fMonadIO
                   (GHC.List.filter @ Main.User (Main.matchesId id) Main.allUsers)) -}
be8fb5cc86a6241c842d09a2d1a28992
  main_w2 ::
    Web.Scotty.Internal.Types.ActionT
      Data.Text.Internal.Lazy.Text
      GHC.Types.IO
      Data.Text.Internal.Lazy.Text
  {- Unfolding: (Web.Scotty.Action.param
                   @ Data.Text.Internal.Lazy.Text
                   @ Data.Text.Internal.Lazy.Text
                   @ GHC.Types.IO
                   Web.Scotty.Action.$fParsableText0
                   Web.Scotty.Internal.Types.$fScottyErrorText
                   GHC.Base.$fMonadIO
                   Main.main4) -}
93ff766a00855fb8e11ca31422816df2
  main_w3 ::
    Data.Text.Internal.Lazy.Text
    -> Web.Scotty.Internal.Types.ActionT
         Data.Text.Internal.Lazy.Text GHC.Types.IO ()
  {- Arity: 1, Strictness: <L,1*U> -}
ad64ac1028879ba7c313a4138e2d76da
  main_w5 ::
    Web.Scotty.Internal.Types.ActionT
      Data.Text.Internal.Lazy.Text GHC.Types.IO GHC.Types.Int
  {- Unfolding: (Web.Scotty.Action.param
                   @ GHC.Types.Int
                   @ Data.Text.Internal.Lazy.Text
                   @ GHC.Types.IO
                   Web.Scotty.Action.$fParsableInt
                   Web.Scotty.Internal.Types.$fScottyErrorText
                   GHC.Base.$fMonadIO
                   Main.main15) -}
b9f6ca3e439335a53750396a371d6283
  matchesId :: GHC.Types.Int -> Main.User -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S(S)L),1*U(1*U(U),A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (id :: GHC.Types.Int) (user :: Main.User) ->
                 case user of wild { Main.User ds ds1 ->
                 GHC.Classes.eqInt ds id }) -}
1742e72607cb765e2577200d44322d15
  userId :: Main.User -> GHC.Types.Int
  RecSel Left Main.User
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),1*U(1*U(U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.User) ->
                 case ds of wild { Main.User ds1 ds2 -> ds1 }) -}
1742e72607cb765e2577200d44322d15
  userName :: Main.User -> GHC.Base.String
  RecSel Left Main.User
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.User) ->
                 case ds of wild { Main.User ds1 ds2 -> ds2 }) -}
instance Data.Aeson.Types.FromJSON.FromJSON [Main.User]
  = Main.$fFromJSONUser
instance GHC.Generics.Generic [Main.User] = Main.$fGenericUser
instance GHC.Show.Show [Main.User] = Main.$fShowUser
instance Data.Aeson.Types.ToJSON.ToJSON [Main.User]
  = Main.$fToJSONUser
family instance GHC.Generics.Rep [Main.User] = Main.Rep_User
"SPEC/Main $fFromJSON[] @ Char" [orphan] forall (v :: Data.Aeson.Types.FromJSON.FromJSON
                                                        GHC.Types.Char)
  Data.Aeson.Types.FromJSON.$fFromJSON[] @ GHC.Types.Char v
  = Main.$fFromJSONUser_$s$fFromJSON[]
"SPEC/Main $fSelectorMetaMetaSel @ ('Just
                                     "userId") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [orphan] forall (v3 :: GHC.Generics.SingI
                                                                                                                                                                                'GHC.Generics.DecidedLazy)
                                                                                                                                                                       (v2 :: GHC.Generics.SingI
                                                                                                                                                                                'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                       (v1 :: GHC.Generics.SingI
                                                                                                                                                                                'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                       (v :: GHC.Generics.SingI
                                                                                                                                                                               ('GHC.Maybe.Just
                                                                                                                                                                                  "userId"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Maybe.Just "userId")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     v
                                     v1
                                     v2
                                     v3
  = Main.$fFromJSONUser_$s$fSelectorMetaMetaSel1
"SPEC/Main $fSelectorMetaMetaSel @ ('Just
                                     "userName") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [orphan] forall (v3 :: GHC.Generics.SingI
                                                                                                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                                                                                                         (v2 :: GHC.Generics.SingI
                                                                                                                                                                                  'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                         (v1 :: GHC.Generics.SingI
                                                                                                                                                                                  'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                         (v :: GHC.Generics.SingI
                                                                                                                                                                                 ('GHC.Maybe.Just
                                                                                                                                                                                    "userName"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Maybe.Just "userName")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     v
                                     v1
                                     v2
                                     v3
  = Main.$fFromJSONUser_$s$fSelectorMetaMetaSel
"SPEC/Main $fToJSON[] @ User" forall (v :: Data.Aeson.Types.ToJSON.ToJSON
                                             Main.User)
  Data.Aeson.Types.ToJSON.$fToJSON[] @ Main.User v
  = Main.$s$fToJSON[]
trusted: none
require own pkg trusted: False
module header:
  Nothing
declaration docs:
arg docs:

